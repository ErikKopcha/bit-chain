// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String     @id @default(cuid())
  email           String     @unique
  password        String
  createdAt       DateTime   @default(now())
  defaultCategory String     @default("solo") // Reference to the default category name
  trades          Trade[]
  categories      Category[] // User's categories
}

model Category {
  id        String   @id @default(cuid())
  name      String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  trades    Trade[]
  createdAt DateTime @default(now())

  @@unique([userId, name]) // Ensure category names are unique per user
}

model Trade {
  id           String   @id @default(cuid())
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  categoryId   String
  category     Category @relation(fields: [categoryId], references: [id])
  date         DateTime @default(now())
  symbol       String
  side         TradeSide
  entryPrice   Float
  positionSize Float
  stopLoss     Float
  exitPrice    Float
  commission   Float
  riskPercent  Float
  pnl          Float
  result       TradeResult
  leverage     Float?
  investment   Float?
  createdAt    DateTime @default(now())
  deposit      Float
  isDemo       Boolean  @default(false)
  comment      String?
}

enum TradeSide {
  LONG
  SHORT
}

enum TradeResult {
  WIN
  LOSS
  PENDING
}

enum TradeCategory {
  solo
  radar
  everest
  cryptonite_radar
  cryptonite_everest
  humster
}